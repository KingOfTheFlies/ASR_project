defaults:
  - model: deepspeech2
  - writer: wandb
  - metrics: trian_metrics
  - datasets: example
  - dataloader: example
  - transforms: example_only_instance
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  lr: 2e-4
lr_scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.9
  last_epoch: -1 
loss_function:
  _target_: src.loss.CTCLossWrapper
  zero_infinity: True
text_encoder:
  _target_: src.text_encoder.CTCTextEncoder
  use_bpe: True
  bpe_vocab_size: 1000
  tokenizer_model_dir: './tokenizers/bpe_tokenizer_model/'
  train_text_path: "./data/datasets/librispeech/train-clean-100_index.json"   # path to json corpus
trainer:
  log_step: 10
  n_epochs: 100
  # epoch_len: 200
  device_tensors: ["spectrogram", "text_encoded"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: False # if True, will override the previous run with the same name
  monitor: "min val_WER_(Argmax)" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  max_grad_norm: 10
  seed: 1
